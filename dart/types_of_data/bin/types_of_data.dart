//? Типы данных - переменные
void main(List<String> args) {
  //? Числа
  int a = 5; // int - Целое число
  double b = 5.0; // double - Число с плавающей точкой

  //? Строки
  String c = 'Hellow world!'; // String - строка

  //? Логичность
  bool d = true;
  bool e =
      false; // bool - принимает и возвращает true или false (истина или ложь)

  //? Списки
  List w = [
    1,
    'Hello',
    true,
  ];

  List<int> l = [4, 8, 42, 15];
  List<String> ll = ['Qwer', 'Asdf', 'Zxcv'];
  // List - список, может принимать в себя различные типы данных, все данные хрянятся по индексу, начиная с 0 (Упорядоченный список)
  Set q = {
    1,
    'Hello',
    true
  }; // Set - список, может принимать в себя различные типы данных, исключая одинаковые элементы. Set - не сохраняет порядок индексов элемента. (Неупорядоченный список)
  Map y = {
    1: 'Hello',
    2: 234,
    3: true
  }; // Map - список. Не используется как упорядоченный по индексам список. Map используется по типу {ключь: значение}, значения могут повторяться, а ключь всегда должен быть уникальным(индивидуальным). (Неупорядоченный список)

  //? Вывод в консоль
  print(a + b.toInt()); // .toInt() конвертирует b в тип данных int
  print(
      'Числа: $a, $b \nСтроки: $c \nЛогичность: $d, $e \nСписки: $w, $q, $y'); // print - Вывод в консоль строки
  // $ - вывод в консоль переменной
  // \n - Перенос на новую строку

  //? var
  var aa =
      15.3; // var - принимает и хранит в себе различные типы данных. var способен лишь 1 раз принять в себя 1 тип данных и более его не меняет.

  //? dynamic
  dynamic bb =
      'Hi Daniel'; // dynamic - принимает и хранит в себе различные типы данных. dynamic способен изменять свой тип данных при последующем присвоении.
  bb = 15; // Переопределение значения переменной bb

  //? final
  final cc =
      'qwerty'; // final - способен хранить в себе различные типы данных, но объявляется единожды и исполняется в момент запуска приложения.

  //? const
  const dd =
      154; // const - способна хранить в себе различные типы данных, объявляется единожды, исполняется перед исполнением запуска приложения.

  print(bb
      .runtimeType); // .runtimeType - позволяет определить и вывести тип данных переменной
  print('$aa $dd $cc');
}
