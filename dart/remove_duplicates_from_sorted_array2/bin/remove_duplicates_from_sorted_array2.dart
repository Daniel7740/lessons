//? Функция, которая удаляет дубликаты из списка целых чисел
// и оставляет по крайней мере 2 элемента для каждого уникального элемента
// входной параметр nums - массив целых чисел
// возвращает количество элементов массива после удаления дубликатов

//? Решение 1
// int removeDuplicates(List<int> nums) {
//   int index = 1; // указатель на следующий индекс в массиве, куда нужно записать элемент без дубликата
//   int count = 1; // счетчик количества повторений уникального элемента

// // Обход массива начиная со второго элемента (i = 1)
//   for (int i = 1; i < nums.length; i++) {
// // проверяем, является ли текущий элемент дубликатом предыдущего элемента
//     if (nums[i] == nums[i-1]) {
//       count++; // увеличиваем счетчик повторений
//     } else {
//       count = 1; // если элемент не дубликат, то сбрасываем счетчик
//     }

// // если счетчик меньше или равен 2, то подходящий элемент:
// // или он уникальный, или он повторяется только 1 раз после первого вхождения
// // записываем его на следующую позицию в массиве
//     if (count <= 2) {
//       nums[index] = nums[i];
//       index++; // сдвигаем указатель следующей пустой позиции на 1
//     }
//   }

// // возвращаем количество элементов в массиве без учета удаленных дубликатов
//   return index;
// }

//? Решение 2
int removeDuplicates(List<int> nums) {
  int n = nums.length;
  if (n <= 2) {
    return n; // если всего 2 или менее элементов, возвращаем длину списка
  }

  int i =
      2; // указатель на первый элемент, который мы можем поменять (оставляем 2 одинаковых элемента в начале списка)

  for (int j = 2; j < n; j++) {
    if (nums[j] != nums[i - 2]) {
      nums[i] = nums[j];
      i++;
    }
  }

  return i; // возвращаем новую длину списка
}

//? Проверка
void main() {
  List<int> nums = [1, 1, 1, 2, 2, 3];
  List<int> expectedNums = [1, 1, 2, 2, 3];

  int k = removeDuplicates(nums);

  assert(k ==
      expectedNums
          .length); // проверяем, что длина массива такая же, как и у ожидаемого результата
  for (int i = 0; i < k; i++) {
    assert(nums[i] ==
        expectedNums[
            i]); // проверяем, что элементы массива равны соответствующим элементам массива-ожидания
  }
}
