// –í—ã —Å—Ä–∞–∂–∞–µ—Ç–µ—Å—å —Å –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–º –≤ –∏–Ω—Ç—É–∏—Ü–∏–∏)
import 'dart:io';
import 'pc_number.dart';
import 'print_colors.dart';
import 'your_number.dart';
// ignore: depend_on_referenced_packages
import 'package:collection/collection.dart';

void vs() {
  printBlue(
      '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤ –æ—Ç 1 –¥–æ 10\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - 3');
  String round = stdin.readLineSync()!;
  if (round == '') {
    round = '3';
  } else if (int.parse(round) > 10) {
    printRed('–û—à–∏–±–∫–∞! –í—ã –≤—ã–±—Ä–∞–ª–∏ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 10\n');
    printBlue('–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞—É–Ω–¥–æ–≤ –æ—Ç 1 –¥–æ 10');
    String round = stdin.readLineSync()!;
  } else if (int.parse(round) <= 0) {
    printRed('–í—ã –≤—ã–±—Ä–∞–ª–∏ 0 —Ä–∞—É–Ω–¥–æ–≤\n–¢—Ä—É—Ö–Ω—É–ª–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–ø—É–∫—Ç–µ—Ä–æ–º?');
    printBlue('–ñ–º–∏ 1 - –µ—Å–ª–∏ –î–ê\n–ñ–º–∏ 2 - –µ—Å–ª–∏ –ù–ï–¢');

    int yORn = int.parse(stdin.readLineSync()!);
    if (yORn == 1) {
      print('–ü—Ä–∞–≤–∏–ª—å–Ω–æ –∫–æ–∂–∞–Ω—ã–π –±–æ–π—Å—è –Ω–∞—Å - –∫–æ–º–ø—É–∫—Ç–µ—Ä–æ–≤!üòà');
      exit(200);
    } else if (yORn == 2) {
      vs();
      exit(200);
    } else {
      printRed('–•–∞—Ö–∞—Ö–∞ - –ø—Ä–æ–º–∞—Ö–Ω—É–ª—Å—è!');
      exit(200);
    }
  }

  for (var i = 0; i < 1; i++) {
    List<int> userCount = [];
    List<int> pcCount = [];
    for (var i = 0; i < int.parse(round); i++) {
      printCyan('\n----------–†–∞—É–Ω–¥: ${i + 1}----------');
      printMagenta('===–ö–æ–º–ø—É–∫—Ç–µ—Ä –æ—Ç–≥–∞–¥—ã–≤–∞–µ—Ç –≤–∞—à–µ —á–∏—Å–ª–æ!===');
      user(userCount);
      printMagenta('===–í–∞—à —á–µ—Ä—ë–¥ –æ—Ç–≥–∞–¥—ã–≤–∞—Ç—å —á–∏—Å–ª–æ –∫–æ–º–ø—É–∫—Ç–µ—Ä–∞!===');
      pc(pcCount);
    }
    print('–°—á—ë—Ç –∫–æ–º–ø—É–∫—Ç–µ—Ä–∞: $userCount');
    print('–°—á—ë—Ç –∏–≥—Ä–æ–∫–∞: $pcCount');
    int scoreUser = userCount.sum;
    int scorePC = pcCount.sum;
    if (scoreUser < scorePC) {
      printRed(
          '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏! - –•–æ—Ç—è —á–µ–º—É —É–¥–∏–≤–ª—è—Ç—å—Å—è, –∫—É–¥–∞ –≤–∞–º –∫–æ–∂–∞–Ω—ã–º –¥–æ –∫–æ–º–ø—É–∫—Ç–µ—Ä–∞!ü§ñüòà');
      printMagenta('–í–∞—à —Å—á—ë—Ç: $scorePC\n–°—á—ë—Ç –∫–æ–º–ø—É–∫—Ç–µ—Ä–∞: $scoreUser');
      break;
    } else if (scoreUser > scorePC) {
      printGreen('–í—ã –ø–æ–±–µ–¥–∏–ª–∏!üòÅ –í–æ—Å—Å—Ç–∞–Ω–∏–µ –º–∞—à–∏–Ω –æ—Ç–º–µ–Ω—è–µ—Ç—Å—è!ü§ñüö´');
      printMagenta('–í–∞—à —Å—á—ë—Ç: $scorePC\n–°—á—ë—Ç –∫–æ–º–ø—É–∫—Ç–µ—Ä–∞: $scoreUser');
      break;
    } else {
      printGreen('–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞! ü§ñü§ùüë¶');
      printMagenta('–í–∞—à —Å—á—ë—Ç: $scorePC\n–°—á—ë—Ç –∫–æ–º–ø—É–∫—Ç–µ—Ä–∞: $scoreUser');
      exit(200);
    }
  }
}
