//? Первый уникальный символ в строке

// Код выполняет поиск первого неповторяющегося символа в строке и возвращает его индекс. Если такого символа нет, то возвращается значение -1.

//? Первое решение:
void firstUniqChar(List<String> s) {
  // Метод принимает на вход строку и возвращает индекс первого неповторяющегося символа
  int firstUniqChar(String s) {
    // Итерируемся по строке
    for (int i = 0; i < s.length; i++) {
      // Если символ с индексом i является уникальным (оно последний раз встречается и первый раз встречается в строке на одном месте)
      if (s.lastIndexOf(s[i]) == i && s.indexOf(s[i]) == i) {
        // Возвращаем индекс уникального символа
        return i;
      }
    }
    // Если неповторяющийся символ не найден, возвращаем -1
    return -1;
  }
}

//? Второе решение:
int findFirstUniqueChar(String s) {
  // функция принимает на вход строку s и возвращает целое число
  for (int i = 0; i < s.length; i++) {
    // цикл по всем символам в строке
    bool isUnique = true; // флаг, указывающий на уникальность текущего символа
    for (int j = 0; j < s.length; j++) {
      // вложенный цикл поиска повторяющихся символов
      if (i != j && s[i] == s[j]) {
        // если текущий символ уже встречался, то он неуникален
        isUnique = false;
        break; // досрочный выход из цикла
      }
    }
    if (isUnique) {
      // если текущий символ уникален, то возвращается его индекс
      return i;
    }
  }
  return -1; // если ни один символ не является уникальным, вернуть -1
}

//? Проверка
void main() {
  List<String> s = ['loveleetcode'];
  firstUniqChar(s);
}
